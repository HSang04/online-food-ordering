import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import DeliveryMapComponent from './DeliveryMapComponent';
import axios from '../../../services/axiosInstance';
import './OrderTracking.css';

const OrderTrackingPage = () => {
  const { donHangId } = useParams();
  const [donHang, setDonHang] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchDonHang = async () => {
      try {
        const response = await axios.get(`/don-hang/${donHangId}`);
        setDonHang(response.data);
        setLoading(false);
      } catch (err) {
        setError('Kh√¥ng th·ªÉ t·∫£i th√¥ng tin ƒë∆°n h√†ng');
        setLoading(false);
      }
    };

    if (donHangId) {
      fetchDonHang();
    }
  }, [donHangId]);

  if (loading) {
    return (
      <div className="tracking-container">
        <div className="loading">ƒêang t·∫£i...</div>
      </div>
    );
  }

  if (error || !donHang) {
    return (
      <div className="tracking-container">
        <div className="error">{error || 'Kh√¥ng t√¨m th·∫•y ƒë∆°n h√†ng'}</div>
      </div>
    );
  }

  return (
    <div className="tracking-container">
      <div className="tracking-header">
        <h1>üöö Theo d√µi ƒë∆°n h√†ng #{donHangId}</h1>
        <div className="order-status">
          <span className={`status-badge status-${donHang.trangThai?.toLowerCase()}`}>
            {donHang.trangThai}
          </span>
        </div>
      </div>

      <div className="tracking-content">
        <div className="order-info-card">
          <h3>üìã Th√¥ng tin ƒë∆°n h√†ng</h3>
          <div className="info-grid">
            <div className="info-item">
              <span className="label">ƒê·ªãa ch·ªâ giao h√†ng:</span>
              <span className="value">{donHang.diaChiGiaoHang}</span>
            </div>
            <div className="info-item">
              <span className="label">T·ªïng ti·ªÅn:</span>
              <span className="value">{donHang.tongTien?.toLocaleString()}‚Ç´</span>
            </div>
            <div className="info-item">
              <span className="label">Ng√†y ƒë·∫∑t:</span>
              <span className="value">
                {new Date(donHang.ngayTao).toLocaleString('vi-VN')}
              </span>
            </div>
            {donHang.ghiChu && (
              <div className="info-item full-width">
                <span className="label">Ghi ch√∫:</span>
                <span className="value">{donHang.ghiChu}</span>
              </div>
            )}
          </div>
        </div>

        <div className="map-card">
          <h3>üó∫Ô∏è V·ªã tr√≠ giao h√†ng</h3>
          {donHang.latGiaoHang && donHang.lonGiaoHang ? (
            <DeliveryMapComponent
              mode="tracking"
              donHangId={donHangId}
              initialDeliveryLocation={{
                lat: donHang.latGiaoHang,
                lng: donHang.lonGiaoHang
              }}
            />
          ) : (
            <div className="no-location">
              <p>Ch∆∞a c√≥ th√¥ng tin v·ªã tr√≠ giao h√†ng</p>
            </div>
          )}
        </div>

        <div className="order-items-card">
          <h3>üçî Chi ti·∫øt m√≥n ƒÉn</h3>
          <div className="items-list">
            {donHang.chiTietDonHang?.map((item, index) => (
              <div key={index} className="item-row">
                <div className="item-name">
                  {item.monAn?.tenMonAn}
                  <span className="item-quantity">x{item.soLuong}</span>
                </div>
                <div className="item-price">
                  {item.thanhTien?.toLocaleString()}‚Ç´
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default OrderTrackingPage;